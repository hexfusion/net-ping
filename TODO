TODO list for Net::Ping (in case anyone is looking for things to do)

- IPv6 support
There is a patch on the CPAN RT for adding IPv6 support.  This needs to be looked over to
determine what will work.  Now that Socket is on CPAN and Net::Ping assumes a recent version,
I can assume that many of the IPv6 functions and constants are available.  Better yet, some
options like IP_TOS and IP_TTL are not available on IPv6

- modernization and general cleanup
If I add the IPv6 changes from the patch (or something similar), we'll be up to seven optional
parameters for new.  my $ping = Net::Ping->new(undef, undef, undef, undef, undef, undef, 'v6') 
is just weird.  Initialization through a hash ref seems to be in order.  Other cleanups seem
to be in order in the code.

- warnings and strict
It's time.  They need to be added to the module and to the tests.  I'll start with warnings
across the board, cleanup as needed, then work on strict.

- POD rewriting
Some things, such as the return from $p->ping(), are cryptic.  The location of the
source is off as well.

- Device
Setting the device uses SO_BINDTODEVICE.  This is Linux-only and should not work anywhere
else.  I think deprecating this is probably the right thing to do.

-TOS
The incoming TOS value can be just about anything from my testing.  This valid values are
supposed to be (in decimal) 0, 1, 2, 4, and 8 assuming we aren't talking DS and ECN.
I don't know right now if this is a bug in Socket, Darwin (tesing on Mac OS X currently)
or if that's just the way it is.  Time for some C level testing for this one.
P.S. TOS is IPv4 only.

- Tests
Nicholas Clark converted the tests to Test::More which is a good start.  The tests need some
cleanup and modernizing.  Below is the current test coverage when testing as root.

----------------------------------- ------ ------ ------ ------ ------ ------
File                                  stmt   bran   cond    sub   time  total
----------------------------------- ------ ------ ------ ------ ------ ------
blib/lib/Net/Ping.pm                  62.6   42.8   33.0   76.9  100.0   52.6
Total                                 62.6   42.8   33.0   76.9  100.0   52.6
----------------------------------- ------ ------ ------ ------ ------ ------

This needs to be quite a bit higher all around to make me comfortable with a refactor.


